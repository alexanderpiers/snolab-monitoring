import sys
import numpy as np
import scipy.stats
from astropy.io import fits


def readLTA(filename):
    """
        Read a .fz file generated by the LTA readout electronics
    """

    fitsImg = fits.open(filename)
    # print(fitsImg)

    header = []
    data = []
    for img in fitsImg:
        header.append(img.header)
        data.append(img.data)

   
    return header, data

def reshapeLTAData(data, nrows, ncols, nskips):

    ltadata = np.reshape(data, (nrows, nskips, ncols), "F")

    return np.transpose(ltadata, (0, 2, 1))

def read(filename):
    """
	Reads the fits file from filename and returns the header information and
	a numpy array of the data (nrows, ncolumns, nskips)
	"""

    fitsImg = fits.open(filename)

    # Get numpy of rows, columns, and skips
    header = fitsImg[0].header
    nrows = header["NAXIS2"]

    # Average image fits does not have an NDCMS key
    try:
        nskips = header["NDCMS"]
    except KeyError:
        nskips = 1

    ncolumns = header["NAXIS1"] // nskips

    # Get data and put it in the shape we want
    data = fitsImg[0].data
    data = np.reshape(data, (nrows, nskips, ncolumns), "F")
    data = np.transpose(data, (0, 2, 1))

    # Include the average image in the output array
    data = np.append(data, np.mean(data, -1, keepdims=True), axis=-1)

    fitsImg.close()
    return header, data


if __name__ == "__main__":
    # Testing the read function
    fitsFilename = "/home/damic/ExtraSpace1/LTA/ltaDaemon_Oscura/images/image_lta_14.fz"
    header, data = readLTA(fitsFilename)

    import matplotlib.pyplot as plt

    fig, axs = plt.subplots(4, 1, figsize=(15, 10), sharex=True, sharey=True)

    for i, ax in enumerate(axs):
        med = np.median(data[i+1])
        mad = scipy.stats.median_absolute_deviation(data[i+1], axis=None)
        cax = ax.imshow(data[i+1], aspect="auto", vmin=med-3*mad, vmax=med+3*mad)
        fig.colorbar(cax, ax=ax)

    plt.show()
   # img = data[:, :, -1]
   # print(data.shape)
   # imgMean = np.mean(img)
   # imgStd = np.std(img)
   # fig, ax = plt.subplots(1, 1, figsize=(12, 8))
   # cax = ax.imshow(
   #     img, vmin=imgMean - 3 * imgStd, vmax=imgMean + 3 * imgStd, cmap=colors
   # )

   # fig.colorbar(cax, ax=ax)

   # # Image histogram
   # figH, axH = plt.subplots(1, 1, figsize=(12, 8))
   # bins = np.linspace(imgMean - 3 * imgStd, imgMean + 3 * imgStd, 1000)
   # # bins = np.linspace(19400, 19500, 200)
   # axH.hist(img.flatten(), bins=bins)
   # axH.set_xlabel("Pixel Value", fontsize=16)
   # axH.set_yscale("log")

   # print(imgMean)
   # print(imgStd)
   # plt.show()
